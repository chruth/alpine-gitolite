os: linux
dist: bionic
language: shell
env:
  global:
    - REPO=${DOCKER_USERNAME}/alpine-gitolite
    - VERSION=${TRAVIS_COMMIT::8}
  jobs:
    - ARCH=amd64
    - ARCH=aarch64
    - ARCH=armhf

before_install:
  - sudo rm -rf /var/lib/apt/lists/*
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - mkdir -vp ~/.docker/cli-plugins/
  - curl --silent -L "https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
  - chmod a+x ~/.docker/cli-plugins/docker-buildx

before_script:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

script:
  - docker buildx create --use
  - docker buildx build --push --build-arg ARCH=${ARCH} --platform linux/${ARCH} --tag $REPO:${ARCH}-latest .
  - if [ "${TRAVIS_EVENT_TYPE}" == "cron" ]; then docker buildx build --push --build-arg ARCH=${ARCH} --platform linux/${ARCH} --tag $REPO:${ARCH}-${VERSION} . ; fi

jobs:
  include:
    - stage: "Deploy"
      name: "Manifest"
      script:
        - cat <<< $(jq '.+{"experimental":"enabled"}' ~/.docker/config.json) > ~/.docker/config.json
        - |
          push() {
            docker pull $REPO:amd64-${1} & docker pull $REPO:aarch64-${1} & docker pull $REPO:armhf-${1}
            docker manifest create $REPO:${1} $REPO:amd64-${1} $REPO:aarch64-${1} $REPO:armhf-${1}
            docker manifest annotate $REPO:${1} $REPO:amd64-${1} --os linux --arch amd64
            docker manifest annotate $REPO:${1} $REPO:armhf-${1} --os linux --arch arm --variant v7
            docker manifest annotate $REPO:${1} $REPO:aarch64-${1} --os linux --arch arm64 --variant v8
            docker manifest push --purge $REPO:${1}
          }
        - if [ "${TRAVIS_EVENT_TYPE}" == "cron" ]; then push ${VERSION} ; fi
        - push latest
